mutate(value = sample(100:1000))
regions <-
world_map %>%
select(region) %>%
distinct() %>%
mutate(value = sample(100:1000, n()))
View(regions)
set.seed(123)
regions <-
world_map %>%
select(region) %>%
distinct() %>%
mutate(value = sample(100:1000, n()))
#| include: false
set.seed(123)
regions <-
world_map %>%
select(region) %>%
distinct() %>%
mutate(value = sample(100:1000, n()))
head(world_map)
regions_data <-
world_map %>%
select(region) %>%
distinct() %>%
mutate(value = sample(100:1000, n()))
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(dplyr)
elsi_data <- readr::read_csv("https://github.com/utkeds/f23-founds-eds/blob/main/data/ELSI_csv_export_6383262475806903427192.csv?raw=true", skip = 6) %>% janitor::clean_names()
# Chunk 2
# then load all the relevant packages
pacman::p_load(pacman, knitr, tidyverse, readxl)
# Chunk 3: xaringanExtra-clipboard
# these allow any code snippets to be copied to the clipboard so they
# can be pasted easily
htmltools::tagList(
xaringanExtra::use_clipboard(
button_text = "<i class=\"fa fa-clipboard\"></i>",
success_text = "<i class=\"fa fa-check\" style=\"color: #90BE6D\"></i>",
),
rmarkdown::html_dependency_font_awesome()
)
# Chunk 4: xaringan-panelset
xaringanExtra::use_panelset()
# Chunk 5
#| echo: true
glimpse(elsi_data %>% select(state_name_public_school_latest_available_year))
# Chunk 6
#| echo: true
elsi_data <- elsi_data %>%
mutate(state_name_public_school_2021_22 = as.double(state_name_public_school_2021_22))
# Chunk 7
#| echo: true
elsi_data %>%
group_by(agency_id_nces_assigned_public_school_latest_available_year) %>%
summarize(mean = mean(total_students_all_grades_excludes_ae_public_school_2021_22)) %>%
arrange(desc(mean)) %>% head()
# Chunk 8
#| echo: true
elsi_data %>% nrow()
# Chunk 9
#| echo: true
elsi_data %>%
group_by(school_name) %>%
nrow()
# Chunk 10
#| echo: true
table(elsi_data$state_name_public_school_latest_available_year)
# Chunk 11
world_map <- map_data("world")
head(world_map)
# Chunk 12
#| echo: true
ggplot(data = world_map) +
geom_map(map = world_map,
aes(x = long,
y = lat,
map_id = region)) +
coord_fixed(1.3)
# Chunk 13
#| echo: true
ggplot(data = world_map) +
geom_map(map = world_map,
aes(x = long,
y = lat,
map_id = region),
fill = "white",
size = 1,
color = "blue") +
coord_fixed(1.3)
# Chunk 14
#| echo: false
#| out.width: 60%
#| fig-align: center
knitr::include_graphics("photo.png")
#| echo: false
#| out.width: 60%
#| fig-align: center
knitr::include_graphics("~/R/f23-founds-eds/week-11photo.png")
head(regions_data)
#| include: false
set.seed(123)
regions_data <-
world_map %>%
select(region) %>%
distinct() %>%
mutate(value = sample(100:1000, n()))
head(world_map)
map_data("jfdksjf")
head(regions_data)
joined_data <- left_join(world_map, regions_data)
View(joined_data)
joined_data <- left_join(world_map, regions_data, by = "region")
View(joined_data)
ggplot(data = joined_data) +
geom_map(map = joined_data,
aes(x = long,
y = lat,
fill = value,
map_id = region)) +
coord_fixed(1.3)
#| include: false
set.seed(123)
#| echo: true
state_map <- map_data("state")
View(state_map)
state_data <-
state_map %>%
select(region = state) %>%
distinct() %>%
mutate(value = sample(100:1000, n()))
state_data <-
state_map %>%
select(state = region) %>%
distinct() %>%
mutate(value = sample(100:1000, n()))
View(state_data)
#| echo: true
joined_data <- left_join(state_map, state_data, join_by("region" = "state"))
#| echo: true
joined_data <- left_join(state_map, state_data, join_by("region" == "state"))
View(joined_data)
ggplot(data = joined_data) +
geom_map(map = joined_data,
aes(x = long,
y = lat,
fill = value,
map_id = region)) +
coord_fixed(1.3)
View(joined_data)
#| echo: true
ggplot(data = world_map) +
geom_map(map = world_map,
aes(x = long,
y = lat,
map_id = region),
fill = "white",
size = 1,
color = "blue") +
coord_fixed(1.3)
#| echo: true
ggplot(data = world_map) +
geom_map(map = world_map,
aes(map_id = region),
fill = "white",
size = 1,
color = "blue") +
coord_fixed(1.3)
help(maps)
??maps
View(state_map)
tibble::tribble(
~Place.Name, ~Latitude,  ~Longitude,
"Wisconsin, USA",      44.5,       -89.5,
"West Virginia, USA",        39,       -80.5,
"Vermont, USA",        44,  -72.699997,
"Texas, the USA",        31,        -100,
"South Dakota, the US",      44.5,        -100,
"Rhode Island, the US", 41.742325,  -71.742332,
"Oregon, the US",        44,      -120.5,
"New York, USA",        43,         -75,
"New Hampshire, USA",        44,       -71.5,
"Nebraska, USA",      41.5,        -100,
"Kansas, the US",      38.5,         -98,
"Mississippi, USA",        33,         -90,
"Illinois, USA",        40,         -89,
"Delaware, the US",        39,       -75.5,
"Connecticut, USA", 41.599998,  -72.699997,
"Arkansas, the US", 34.799999,  -92.199997,
"Indiana, USA", 40.273502,  -86.126976,
"Missouri, USA", 38.573936,   -92.60376,
"Florida, USA", 27.994402,  -81.760254,
"Nevada, USA", 39.876019, -117.224121,
"Maine, the USA", 45.367584,  -68.972168,
"Michigan, USA", 44.182205,  -84.506836,
"Georgia, the USA", 33.247875,  -83.441162,
"Hawaii, USA", 19.741755, -155.844437,
"Alaska, USA", 66.160507, -153.369141,
"Tennessee, USA", 35.860119,  -86.660156,
"Virginia, USA", 37.926868,  -78.024902,
"New Jersey, USA", 39.833851,  -74.871826,
"Kentucky, USA", 37.839333,   -84.27002,
"North Dakota, USA", 47.650589, -100.437012,
"Minnesota, USA",  46.39241,   -94.63623,
"Oklahoma, the USA", 36.084621,  -96.921387,
"Montana, USA",  46.96526, -109.533691,
"Washington, the USA", 47.751076, -120.740135,
"Utah, USA",  39.41922, -111.950684,
"Colorado, USA", 39.113014, -105.358887,
"Ohio, USA", 40.367474,  -82.996216,
"Alabama, USA",  32.31823,  -86.902298,
"Iowa, the USA", 42.032974,  -93.581543,
"New Mexico, USA", 34.307144, -106.018066,
"South Carolina, USA", 33.836082,  -81.163727,
"Pennsylvania, USA", 41.203323,  -77.194527,
"Arizona, USA", 34.048927, -111.093735,
"Maryland, USA", 39.045753,  -76.641273,
"Massachusetts, USA", 42.407211,  -71.382439,
"California, USA", 36.778259, -119.417931,
"Idaho, USA", 44.068203, -114.742043,
"Wyoming, USA",  43.07597, -107.290283,
"North Carolina, USA", 35.782169,  -80.793457,
"Louisiana, USA",  30.39183,  -92.329102
)
points_data <-
tibble::tribble(
~Place.Name, ~Latitude,  ~Longitude,
"Wisconsin, USA",      44.5,       -89.5,
"West Virginia, USA",        39,       -80.5,
"Vermont, USA",        44,  -72.699997,
"Texas, the USA",        31,        -100,
"South Dakota, the US",      44.5,        -100,
"Rhode Island, the US", 41.742325,  -71.742332,
"Oregon, the US",        44,      -120.5,
"New York, USA",        43,         -75,
"New Hampshire, USA",        44,       -71.5,
"Nebraska, USA",      41.5,        -100,
"Kansas, the US",      38.5,         -98,
"Mississippi, USA",        33,         -90,
"Illinois, USA",        40,         -89,
"Delaware, the US",        39,       -75.5,
"Connecticut, USA", 41.599998,  -72.699997,
"Arkansas, the US", 34.799999,  -92.199997,
"Indiana, USA", 40.273502,  -86.126976,
"Missouri, USA", 38.573936,   -92.60376,
"Florida, USA", 27.994402,  -81.760254,
"Nevada, USA", 39.876019, -117.224121,
"Maine, the USA", 45.367584,  -68.972168,
"Michigan, USA", 44.182205,  -84.506836,
"Georgia, the USA", 33.247875,  -83.441162,
"Hawaii, USA", 19.741755, -155.844437,
"Alaska, USA", 66.160507, -153.369141,
"Tennessee, USA", 35.860119,  -86.660156,
"Virginia, USA", 37.926868,  -78.024902,
"New Jersey, USA", 39.833851,  -74.871826,
"Kentucky, USA", 37.839333,   -84.27002,
"North Dakota, USA", 47.650589, -100.437012,
"Minnesota, USA",  46.39241,   -94.63623,
"Oklahoma, the USA", 36.084621,  -96.921387,
"Montana, USA",  46.96526, -109.533691,
"Washington, the USA", 47.751076, -120.740135,
"Utah, USA",  39.41922, -111.950684,
"Colorado, USA", 39.113014, -105.358887,
"Ohio, USA", 40.367474,  -82.996216,
"Alabama, USA",  32.31823,  -86.902298,
"Iowa, the USA", 42.032974,  -93.581543,
"New Mexico, USA", 34.307144, -106.018066,
"South Carolina, USA", 33.836082,  -81.163727,
"Pennsylvania, USA", 41.203323,  -77.194527,
"Arizona, USA", 34.048927, -111.093735,
"Maryland, USA", 39.045753,  -76.641273,
"Massachusetts, USA", 42.407211,  -71.382439,
"California, USA", 36.778259, -119.417931,
"Idaho, USA", 44.068203, -114.742043,
"Wyoming, USA",  43.07597, -107.290283,
"North Carolina, USA", 35.782169,  -80.793457,
"Louisiana, USA",  30.39183,  -92.329102
)
#| include: false
points_data <-
tibble::tribble(
~Place.Name, ~Latitude,  ~Longitude,
"Wisconsin, USA",      44.5,       -89.5,
"West Virginia, USA",        39,       -80.5,
"Vermont, USA",        44,  -72.699997,
"Texas, the USA",        31,        -100,
"South Dakota, the US",      44.5,        -100,
"Rhode Island, the US", 41.742325,  -71.742332,
"Oregon, the US",        44,      -120.5,
"New York, USA",        43,         -75,
"New Hampshire, USA",        44,       -71.5,
"Nebraska, USA",      41.5,        -100,
"Kansas, the US",      38.5,         -98,
"Mississippi, USA",        33,         -90,
"Illinois, USA",        40,         -89,
"Delaware, the US",        39,       -75.5,
"Connecticut, USA", 41.599998,  -72.699997,
"Arkansas, the US", 34.799999,  -92.199997,
"Indiana, USA", 40.273502,  -86.126976,
"Missouri, USA", 38.573936,   -92.60376,
"Florida, USA", 27.994402,  -81.760254,
"Nevada, USA", 39.876019, -117.224121,
"Maine, the USA", 45.367584,  -68.972168,
"Michigan, USA", 44.182205,  -84.506836,
"Georgia, the USA", 33.247875,  -83.441162,
"Hawaii, USA", 19.741755, -155.844437,
"Alaska, USA", 66.160507, -153.369141,
"Tennessee, USA", 35.860119,  -86.660156,
"Virginia, USA", 37.926868,  -78.024902,
"New Jersey, USA", 39.833851,  -74.871826,
"Kentucky, USA", 37.839333,   -84.27002,
"North Dakota, USA", 47.650589, -100.437012,
"Minnesota, USA",  46.39241,   -94.63623,
"Oklahoma, the USA", 36.084621,  -96.921387,
"Montana, USA",  46.96526, -109.533691,
"Washington, the USA", 47.751076, -120.740135,
"Utah, USA",  39.41922, -111.950684,
"Colorado, USA", 39.113014, -105.358887,
"Ohio, USA", 40.367474,  -82.996216,
"Alabama, USA",  32.31823,  -86.902298,
"Iowa, the USA", 42.032974,  -93.581543,
"New Mexico, USA", 34.307144, -106.018066,
"South Carolina, USA", 33.836082,  -81.163727,
"Pennsylvania, USA", 41.203323,  -77.194527,
"Arizona, USA", 34.048927, -111.093735,
"Maryland, USA", 39.045753,  -76.641273,
"Massachusetts, USA", 42.407211,  -71.382439,
"California, USA", 36.778259, -119.417931,
"Idaho, USA", 44.068203, -114.742043,
"Wyoming, USA",  43.07597, -107.290283,
"North Carolina, USA", 35.782169,  -80.793457,
"Louisiana, USA",  30.39183,  -92.329102
)
#| include: false
#| include: false
points_data <-
tibble::tribble(
~Place.Name, ~Latitude,  ~Longitude,
"Wisconsin, USA",      44.5,       -89.5,
"West Virginia, USA",        39,       -80.5,
"Vermont, USA",        44,  -72.699997,
"Texas, the USA",        31,        -100,
"South Dakota, the US",      44.5,        -100,
"Rhode Island, the US", 41.742325,  -71.742332,
"Oregon, the US",        44,      -120.5,
"New York, USA",        43,         -75,
"New Hampshire, USA",        44,       -71.5,
"Nebraska, USA",      41.5,        -100,
"Kansas, the US",      38.5,         -98,
"Mississippi, USA",        33,         -90,
"Illinois, USA",        40,         -89,
"Delaware, the US",        39,       -75.5,
"Connecticut, USA", 41.599998,  -72.699997,
"Arkansas, the US", 34.799999,  -92.199997,
"Indiana, USA", 40.273502,  -86.126976,
"Missouri, USA", 38.573936,   -92.60376,
"Florida, USA", 27.994402,  -81.760254,
"Nevada, USA", 39.876019, -117.224121,
"Maine, the USA", 45.367584,  -68.972168,
"Michigan, USA", 44.182205,  -84.506836,
"Georgia, the USA", 33.247875,  -83.441162,
"Hawaii, USA", 19.741755, -155.844437,
"Alaska, USA", 66.160507, -153.369141,
"Tennessee, USA", 35.860119,  -86.660156,
"Virginia, USA", 37.926868,  -78.024902,
"New Jersey, USA", 39.833851,  -74.871826,
"Kentucky, USA", 37.839333,   -84.27002,
"North Dakota, USA", 47.650589, -100.437012,
"Minnesota, USA",  46.39241,   -94.63623,
"Oklahoma, the USA", 36.084621,  -96.921387,
"Montana, USA",  46.96526, -109.533691,
"Washington, the USA", 47.751076, -120.740135,
"Utah, USA",  39.41922, -111.950684,
"Colorado, USA", 39.113014, -105.358887,
"Ohio, USA", 40.367474,  -82.996216,
"Alabama, USA",  32.31823,  -86.902298,
"Iowa, the USA", 42.032974,  -93.581543,
"New Mexico, USA", 34.307144, -106.018066,
"South Carolina, USA", 33.836082,  -81.163727,
"Pennsylvania, USA", 41.203323,  -77.194527,
"Arizona, USA", 34.048927, -111.093735,
"Maryland, USA", 39.045753,  -76.641273,
"Massachusetts, USA", 42.407211,  -71.382439,
"California, USA", 36.778259, -119.417931,
"Idaho, USA", 44.068203, -114.742043,
"Wyoming, USA",  43.07597, -107.290283,
"North Carolina, USA", 35.782169,  -80.793457,
"Louisiana, USA",  30.39183,  -92.329102
)
```{r}
#| echo: true
ggplot(data = joined_data) +
geom_map(map = joined_data,
aes(x = long,
y = lat,
fill = value,
map_id = region)) +
coord_fixed(1.3)
View(points_data)
#| echo: true
ggplot(data = joined_data) +
geom_map(map = joined_data,
aes(x = long,
y = lat,
fill = value,
map_id = region)) +
coord_fixed(1.3) +
geom_point(data = points_data,
aes(x = Longitude, y = Latitude))
dat <- read_csv(here::here("data", "bears.csv"))
dat <- read_csv(here::here("week-11", "data", "bears.csv"))
View(dat)
ggplot(data = world_map) +
geom_map(map = world_map,
aes(x = long,
y = lat,
fill = value,
map_id = region)) +
coord_fixed(1.3)
ggplot(data = world_map) +
geom_map(map = world_map,
aes(x = long,
y = lat,
map_id = region)) +
coord_fixed(1.3) +
geom_point(data = points_data,
aes(x = Longitude, y = Latitude))
View(dat)
ggplot(data = world_map) +
geom_map(map = world_map,
aes(x = long,
y = lat,
map_id = region)) +
coord_fixed(1.3) +
geom_point(data = bear_dat,
aes(x = Longitude, y = Latitude))
ggplot(data = world_map) +
geom_map(map = world_map,
aes(x = long,
y = lat,
map_id = region)) +
coord_fixed(1.3) +
geom_point(data = bear_dat,
aes(x = longitude, y = latitude))
bear_dat <- read_csv(here::here("week-11", "data", "bears.csv"))
ggplot(data = world_map) +
geom_map(map = world_map,
aes(x = long,
y = lat,
map_id = region)) +
coord_fixed(1.3) +
geom_point(data = bear_dat,
aes(x = longitude, y = latitude))
library(tidygeocoder)
View(bear_dat)
bear_dat_geo <-
bear_dat %>%
reverse_geocode(
lat = latitude,
long = longitude,
method = "osm"
)
View(bear_dat)
table(bear_dat$species_guess)
table(bear_dat$common_name)
ggplot(data = world_map) +
geom_map(map = world_map,
aes(x = long,
y = lat,
map_id = region)) +
coord_fixed(1.3) +
geom_point(data = bear_dat,
aes(x = longitude, y = latitude,
color = common_name))
ggplot(data = world_map) +
geom_map(map = world_map,
aes(x = long,
y = lat,
map_id = region)) +
coord_fixed(1.3) +
geom_point(data = bear_dat,
aes(x = longitude, y = latitude,
color = common_name)) +
theme(legend.position = "none") # remove the legend
reticulate::repl_python()
reticulate::repl_python()
View(result)
a <- py$result
a <- py$result
a <- py$result
library(reticulate)
reticulate::repl_python()
exit
exit
a <- py$result
View(a)
bear_dat <- read_csv(here::here("week-11", "data", "bears.csv"))
bear_dat <- readr::read_csv(here::here("week-11", "data", "bears.csv"))
library(tidyverse)
View(bear_dat)
library(maps)
world_map <- map_data("world")
library(maps)
View(bear_dat)
View(world_map)
View(bear_dat)
write_csv(a, "week-11/data/bears.csv")
bear_dat <- read_csv(here::here("week-11", "data", "bears.csv"))
View(bear_dat)
bear_geo_dat <-
left_join(world_map, bear_dat, join_by(region == name))
